*** Working with Foreign Keys ***

1) CREATE TABLE customers (
	id INT AUTO_INCREMENT PRIMARY KEY,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	email VARCHAR(100)
);

1.1) SELECT * FROM customers;
+----+------------+-----------+------------------+
| id | first_name | last_name | email            |
+----+------------+-----------+------------------+
|  1 | Boy        | George    | george@gmail.com |
|  2 | George     | Michael   | gm@gmail.com     |
|  3 | David      | Bowie     | david@gmail.com  |
|  4 | Blue       | Steele    | blue@gmail.com   |
|  5 | Bette      | Davis     | bette@aol.com    |
+----+------------+-----------+------------------+

2) CREATE TABLE orders (
	id INT AUTO_INCREMENT PRIMARY KEY,
	order_date DATE,
	amount DECIMAL(8,2),
	customer_id INT,
	FOREIGN KEY(customer_id) REFERENCES customers(id)
);

2.1) SELECT * FROM orders;
+----+------------+--------+-------------+
| id | order_date | amount | customer_id |
+----+------------+--------+-------------+
|  1 | 2016-02-10 |  99.99 |           1 |
|  2 | 2017-11-11 |  35.50 |           1 |
|  3 | 2014-12-12 | 800.67 |           2 |
|  4 | 2015-01-03 |  12.50 |           2 |
|  5 | 1999-04-11 | 450.25 |           5 |
+----+------------+--------+-------------+

3) INSERT INTO orders (order_date, amount, customer_id) VALUES ('2016/06/06', 33.67, 98);
ERROR 1452 (23000): Cannot add or update a child row: a foreign key constraint fails

*** Cross Join ***

SELECT * FROM customers, orders;
+----+------------+-----------+------------------+----+------------+--------+-------------+
| id | first_name | last_name | email            | id | order_date | amount | customer_id |
+----+------------+-----------+------------------+----+------------+--------+-------------+
|  1 | Boy        | George    | george@gmail.com |  1 | 2016-02-10 |  99.99 |           1 |
|  2 | George     | Michael   | gm@gmail.com     |  1 | 2016-02-10 |  99.99 |           1 |
|  3 | David      | Bowie     | david@gmail.com  |  1 | 2016-02-10 |  99.99 |           1 |
|  4 | Blue       | Steele    | blue@gmail.com   |  1 | 2016-02-10 |  99.99 |           1 |
|  5 | Bette      | Davis     | bette@aol.com    |  1 | 2016-02-10 |  99.99 |           1 |
|  1 | Boy        | George    | george@gmail.com |  2 | 2017-11-11 |  35.50 |           1 |
|  2 | George     | Michael   | gm@gmail.com     |  2 | 2017-11-11 |  35.50 |           1 |
|  3 | David      | Bowie     | david@gmail.com  |  2 | 2017-11-11 |  35.50 |           1 |
|  4 | Blue       | Steele    | blue@gmail.com   |  2 | 2017-11-11 |  35.50 |           1 |
|  5 | Bette      | Davis     | bette@aol.com    |  2 | 2017-11-11 |  35.50 |           1 |
|  1 | Boy        | George    | george@gmail.com |  3 | 2014-12-12 | 800.67 |           2 |
|  2 | George     | Michael   | gm@gmail.com     |  3 | 2014-12-12 | 800.67 |           2 |
|  3 | David      | Bowie     | david@gmail.com  |  3 | 2014-12-12 | 800.67 |           2 |
|  4 | Blue       | Steele    | blue@gmail.com   |  3 | 2014-12-12 | 800.67 |           2 |
|  5 | Bette      | Davis     | bette@aol.com    |  3 | 2014-12-12 | 800.67 |           2 |
|  1 | Boy        | George    | george@gmail.com |  4 | 2015-01-03 |  12.50 |           2 |
|  2 | George     | Michael   | gm@gmail.com     |  4 | 2015-01-03 |  12.50 |           2 |
|  3 | David      | Bowie     | david@gmail.com  |  4 | 2015-01-03 |  12.50 |           2 |
|  4 | Blue       | Steele    | blue@gmail.com   |  4 | 2015-01-03 |  12.50 |           2 |
|  5 | Bette      | Davis     | bette@aol.com    |  4 | 2015-01-03 |  12.50 |           2 |
|  1 | Boy        | George    | george@gmail.com |  5 | 1999-04-11 | 450.25 |           5 |
|  2 | George     | Michael   | gm@gmail.com     |  5 | 1999-04-11 | 450.25 |           5 |
|  3 | David      | Bowie     | david@gmail.com  |  5 | 1999-04-11 | 450.25 |           5 |
|  4 | Blue       | Steele    | blue@gmail.com   |  5 | 1999-04-11 | 450.25 |           5 |
|  5 | Bette      | Davis     | bette@aol.com    |  5 | 1999-04-11 | 450.25 |           5 |
+----+------------+-----------+------------------+----+------------+--------+-------------+

*** Inner Joins ***

** Implicit Inner JOIN **

SELECT * FROM customers, orders WHERE customers.id=orders.customer_id;
+----+------------+-----------+------------------+----+------------+--------+-------------+
| id | first_name | last_name | email            | id | order_date | amount | customer_id |
+----+------------+-----------+------------------+----+------------+--------+-------------+
|  1 | Boy        | George    | george@gmail.com |  1 | 2016-02-10 |  99.99 |           1 |
|  1 | Boy        | George    | george@gmail.com |  2 | 2017-11-11 |  35.50 |           1 |
|  2 | George     | Michael   | gm@gmail.com     |  3 | 2014-12-12 | 800.67 |           2 |
|  2 | George     | Michael   | gm@gmail.com     |  4 | 2015-01-03 |  12.50 |           2 |
|  5 | Bette      | Davis     | bette@aol.com    |  5 | 1999-04-11 | 450.25 |           5 |
+----+------------+-----------+------------------+----+------------+--------+-------------+

** Explicit Inner JOIN **

SELECT first_name,
       last_name,
       order_date,
       amount
FROM   customers
       JOIN orders
         ON customers.id = orders.customer_id; 
+------------+-----------+------------+--------+
| first_name | last_name | order_date | amount |
+------------+-----------+------------+--------+
| Boy        | George    | 2016-02-10 |  99.99 |
| Boy        | George    | 2017-11-11 |  35.50 |
| George     | Michael   | 2014-12-12 | 800.67 |
| George     | Michael   | 2015-01-03 |  12.50 |
| Bette      | Davis     | 1999-04-11 | 450.25 |
+------------+-----------+------------+--------+

	## BONUS ##
SELECT first_name,
       last_name,
       Count(customer_id) AS '# of orders',
       Sum(amount)        AS 'total amount'
FROM   customers
       JOIN orders
         ON customers.id = orders.customer_id
GROUP  BY orders.customer_id
ORDER  BY Sum(amount); 
+------------+-----------+-------------+--------------+
| first_name | last_name | # of orders | total amount |
+------------+-----------+-------------+--------------+
| Boy        | George    |           2 |       135.49 |
| Bette      | Davis     |           1 |       450.25 |
| George     | Michael   |           2 |       813.17 |
+------------+-----------+-------------+--------------+

*** Left Join ***

SELECT first_name,
       last_name,
       order_date,
       amount
FROM   customers
       LEFT JOIN orders
              ON customers.id = orders.customer_id; 
+------------+-----------+------------+--------+
| first_name | last_name | order_date | amount |
+------------+-----------+------------+--------+
| Boy        | George    | 2016-02-10 |  99.99 |
| Boy        | George    | 2017-11-11 |  35.50 |
| George     | Michael   | 2014-12-12 | 800.67 |
| George     | Michael   | 2015-01-03 |  12.50 |
| Bette      | Davis     | 1999-04-11 | 450.25 |
| David      | Bowie     | NULL       |   NULL |
| Blue       | Steele    | NULL       |   NULL |
+------------+-----------+------------+--------+

	## BONUS ##
Option 1: 

SELECT first_name,
       last_name,
       Count(customer_id) AS '# of orders',
       CASE
        WHEN Count(customer_id)=0 THEN 0
        ELSE Sum(amount)       
       END AS 'total amount'
FROM   customers
       LEFT JOIN orders
              ON customers.id = orders.customer_id
GROUP  BY orders.customer_id
ORDER  BY Sum(amount); 
+------------+-----------+-------------+--------------+
| first_name | last_name | # of orders | total amount |
+------------+-----------+-------------+--------------+
| David      | Bowie     |           0 |            0 |
| Boy        | George    |           2 |       135.49 |
| Bette      | Davis     |           1 |       450.25 |
| George     | Michael   |           2 |       813.17 |
+------------+-----------+-------------+--------------+

Option 2:

SELECT first_name,
       last_name,
       Count(customer_id) AS '# of orders',
       IFNULL(SUM(amount), 0) AS 'total amount'
FROM   customers
       LEFT JOIN orders
              ON customers.id = orders.customer_id
GROUP  BY orders.customer_id
ORDER  BY Sum(amount); 
+------------+-----------+-------------+--------------+
| first_name | last_name | # of orders | total amount |
+------------+-----------+-------------+--------------+
| David      | Bowie     |           0 |         0.00 |
| Boy        | George    |           2 |       135.49 |
| Bette      | Davis     |           1 |       450.25 |
| George     | Michael   |           2 |       813.17 |
+------------+-----------+-------------+--------------+

*** Right Join ***

SELECT first_name,
       last_name,
       order_date,
       amount
FROM   customers1
       RIGHT JOIN orders1
              ON customers1.id = orders1.customer_id; 
+------------+-----------+------------+--------+
| first_name | last_name | order_date | amount |
+------------+-----------+------------+--------+
| Boy        | George    | 2016-02-10 |  99.99 |
| Boy        | George    | 2017-11-11 |  35.50 |
| George     | Michael   | 2014-12-12 | 800.67 |
| George     | Michael   | 2015-01-03 |  12.50 |
| Bette      | Davis     | 1999-04-11 | 450.25 |
| NULL       | NULL      | 2017-11-05 |  23.45 |
| NULL       | NULL      | 2021-05-05 | 777.77 |
+------------+-----------+------------+--------+

*** ON DELETE CASCADE (deleting child row together with parent row) ***

1) CREATE TABLE customers (
	id INT AUTO_INCREMENT PRIMARY KEY,
	first_name VARCHAR(100),
	last_name VARCHAR(100),
	email VARCHAR(100)
   );
2) CREATE TABLE orders (
	id INT AUTO_INCREMENT PRIMARY KEY,
	order_date DATE,
	amount DECIMAL(8,2),
	customer_id INT,
	FOREIGN KEY(customer_id) 
		REFERENCES customers(id)
		ON DELETE CASCADE
   );